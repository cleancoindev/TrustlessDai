{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Container, Form, Button, Grid, Input } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport { getZkSnarkInstance, getERCContractInstance } from '../config/instances/contractInstances';\nimport web3 from '../config/web3/web3';\nimport Layout from '../components/Layout';\nimport { getWitness } from \"../functions/getWitness\";\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"ontransfer\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts, daiInstance, approvehash, zkInstance, hash;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context.sent;\n              _context.next = 7;\n              return getERCContractInstance(web3);\n\n            case 7:\n              daiInstance = _context.sent;\n              _context.next = 10;\n              return daiInstance.methods.approve(\"0xBEe02FD1e5b9e3B34A856Fb1E6493dFC854968dB\", \"10\").send({\n                from: accounts[0]\n              });\n\n            case 10:\n              approvehash = _context.sent;\n              console.log(\"approveHash: \", approvehash);\n              _context.next = 14;\n              return getZkSnarkInstance(web3);\n\n            case 14:\n              zkInstance = _context.sent;\n              _context.next = 17;\n              return zkInstance.methods.transferNoteToContract(\"10\", \"0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f\").send({\n                from: accounts[0]\n              });\n\n            case 17:\n              hash = _context.sent;\n              console.log(\"Transaction hash: \", hash);\n              _context.next = 24;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 21]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClaim\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var accounts, zkInstance, witness, url;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              _context2.prev = 1;\n              _context2.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context2.sent;\n              _context2.next = 7;\n              return getZkSnarkInstance(web3);\n\n            case 7:\n              zkInstance = _context2.sent;\n              witness = getWitness('0x48845392F5a7c6b360A733e0ABE2EdcC74f1F4d6', // sender\n              '9', '0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f', // receiver\n              '1');\n              console.log(witness);\n              url = \"http://localhost:3001/createproof?witness=\" + witness;\n              Axios.get(url).then(function (res) {\n                if (res.statusText == 'OK') {} else {\n                  console.log(res);\n                }\n              })[\"catch\"](function (err) {\n                console.log(err);\n\n                _this.setState({\n                  shouldSwap: false,\n                  blocking: false\n                });\n              }); // const hash = await zkInstance.methods.claimNote(\n              //     [\"0x168bab1bbbc15936beb565b51ce8fea998006a0fa9567417aa6261f46dcd16f9\", \"0x01e5c794ab8299705c319366d1bb2bee79b96f05fa08c9aa103f8dcb43a8806b\"],\n              //     [[\"0x1167f9740114fe14ddb0545c4118362589fd7e7ef0bcada02c0212b153755d51\", \"0x1b92451f7a2f8ce896171a8d5842f3455446f2b35e1fb81a1f5040cbcace54ed\"], [\"0x30583965a284f87f733cf0c57016d98446500f31559f810bc6aa6d0c44f2bdd5\", \"0x066b64dde5525d349011707b6f664cc1c1c4b58c3b822016381796675565fdf4\"]],\n              //     [\"0x12d79f5ac4c6cac84c97a113bfa9d2a0c27bbe818e4ca0aad4e9e7015f2ec24a\", \"0x17093bbb859ab53232b408b012e761b1dc87c0cc9d12d09e8d2c99243d1f17c7\"],\n              //     [\"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x000000000000000000000000000000003cb830ed06f3d0e56d7d0ad35010de42\", \"0x00000000000000000000000000000000458b9269b0c07f752e592cd7832522e4\", \"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n              //     \"20\"\n              // ).send({\n              //     from: accounts[0]\n              // });\n              // console.log(\"Transaction hash: \", hash);\n\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 14]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(ToastContainer, null), __jsx(Container, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.ontransfer\n      }, __jsx(Button, null, \"transfer\"))), __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.onClaim\n      }, __jsx(Button, null, \"claim\"))))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/A Computer/Blockchain/ETHGlobal/Gitcoin/MakerDao/TrustlessDai/pages/index.js"],"names":["React","Component","Container","Form","Button","Grid","Input","ToastContainer","getZkSnarkInstance","getERCContractInstance","web3","Layout","getWitness","Index","event","preventDefault","eth","getAccounts","accounts","daiInstance","methods","approve","send","from","approvehash","console","log","zkInstance","transferNoteToContract","hash","witness","url","Axios","get","then","res","statusText","err","setState","shouldSwap","blocking","ontransfer","onClaim"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Form, Button, Grid, Input } from 'semantic-ui-react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport {getZkSnarkInstance, getERCContractInstance} from '../config/instances/contractInstances';\r\nimport web3 from '../config/web3/web3';\r\nimport Layout from '../components/Layout';\r\nimport {getWitness} from \"../functions/getWitness\";\r\nclass Index extends Component {\r\n\r\n    ontransfer = async () => {\r\n        event.preventDefault();\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            const daiInstance = await getERCContractInstance(web3);\r\n            const approvehash = await daiInstance.methods.approve(\r\n                \"0xBEe02FD1e5b9e3B34A856Fb1E6493dFC854968dB\",\r\n                \"10\"\r\n            ).send({\r\n                from: accounts[0]\r\n            });\r\n            console.log(\"approveHash: \", approvehash);\r\n\r\n            const zkInstance = await getZkSnarkInstance(web3);\r\n            const hash = await zkInstance.methods.transferNoteToContract(\r\n                \"10\",\r\n                \"0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f\",\r\n            ).send({\r\n                from: accounts[0]\r\n            });\r\n            console.log(\"Transaction hash: \", hash);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    onClaim = async () => {\r\n        event.preventDefault();\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            const zkInstance = await getZkSnarkInstance(web3);\r\n            const witness = getWitness(\r\n                '0x48845392F5a7c6b360A733e0ABE2EdcC74f1F4d6', // sender\r\n                '9', \r\n                '0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f', // receiver\r\n                '1'\r\n            );\r\n            console.log(witness)\r\n\r\n            const url = \"http://localhost:3001/createproof?witness=\"+witness;\r\n            Axios.get(url)\r\n                .then((res) => {\r\n                    if (res.statusText == 'OK') {\r\n                    } else {\r\n                        console.log(res);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                console.log(err);\r\n                this.setState({ shouldSwap: false, blocking: false });\r\n            });\r\n\r\n            \r\n            // const hash = await zkInstance.methods.claimNote(\r\n            //     [\"0x168bab1bbbc15936beb565b51ce8fea998006a0fa9567417aa6261f46dcd16f9\", \"0x01e5c794ab8299705c319366d1bb2bee79b96f05fa08c9aa103f8dcb43a8806b\"],\r\n            //     [[\"0x1167f9740114fe14ddb0545c4118362589fd7e7ef0bcada02c0212b153755d51\", \"0x1b92451f7a2f8ce896171a8d5842f3455446f2b35e1fb81a1f5040cbcace54ed\"], [\"0x30583965a284f87f733cf0c57016d98446500f31559f810bc6aa6d0c44f2bdd5\", \"0x066b64dde5525d349011707b6f664cc1c1c4b58c3b822016381796675565fdf4\"]],\r\n            //     [\"0x12d79f5ac4c6cac84c97a113bfa9d2a0c27bbe818e4ca0aad4e9e7015f2ec24a\", \"0x17093bbb859ab53232b408b012e761b1dc87c0cc9d12d09e8d2c99243d1f17c7\"],\r\n            //     [\"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x000000000000000000000000000000003cb830ed06f3d0e56d7d0ad35010de42\", \"0x00000000000000000000000000000000458b9269b0c07f752e592cd7832522e4\", \"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x0000000000000000000000000000000000000000000000000000000000000001\"],\r\n            //     \"20\"\r\n            // ).send({\r\n            //     from: accounts[0]\r\n            // });\r\n            // console.log(\"Transaction hash: \", hash);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <Layout>\r\n            <ToastContainer/>\r\n            <Container>\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Form onSubmit={this.ontransfer}>\r\n                            <Button>transfer</Button>\r\n                        </Form>\r\n                    </Grid.Row>\r\n                \r\n                    <Grid.Row>\r\n                        <Form onSubmit={this.onClaim}>\r\n                            <Button>claim</Button>\r\n                        </Form>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Container>\r\n          </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}