{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Container, Form, Button } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport { getZkSnarkInstance, getERCContractInstance } from '../config/instances/contractInstances';\nimport web3 from '../config/web3/web3';\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"ontransfer\", async () => {\n      event.preventDefault();\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const daiInstance = await getERCContractInstance.methods.approve(\"0xAf5956ce09A193E51DF1F1EdFD5dBB4f0ee8D81a\", \"10\").send(from);\n        const zkInstance = await getZkSnarkInstance(web3);\n        const hash = await zkInstance.methods.transferNoteToContract(\"10\", \"0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f\", accounts[0], \"0xAf5956ce09A193E51DF1F1EdFD5dBB4f0ee8D81a\").send({\n          from: accounts[0]\n        });\n        console.log(\"Transaction hash: \", hash);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"onClaim\", async () => {\n      event.preventDefault();\n\n      try {} catch (error) {}\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(ToastContainer, null), __jsx(Container, null, __jsx(Form, {\n      onSubmit: this.ontransfer\n    }, __jsx(Button, null, \"transfer\")), __jsx(Form, {\n      onSubmit: this.onClaim\n    }, __jsx(Button, null, \"claim\"))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/A Computer/Blockchain/ETHGlobal/Gitcoin/MakerDao/TrustlessDai/pages/index.js"],"names":["React","Component","Container","Form","Button","ToastContainer","getZkSnarkInstance","getERCContractInstance","web3","Index","event","preventDefault","accounts","eth","getAccounts","daiInstance","methods","approve","send","from","zkInstance","hash","transferNoteToContract","console","log","error","render","ontransfer","onClaim"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAAQC,kBAAR,EAA4BC,sBAA5B,QAAyD,uCAAzD;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAAA;AAAA;;AAAA,wCAEb,YAAY;AACrBS,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASC,WAAT,EAAvB;AAEA,cAAMC,WAAW,GAAG,MAAMR,sBAAsB,CAACS,OAAvB,CAA+BC,OAA/B,CACtB,4CADsB,EAEtB,IAFsB,EAGxBC,IAHwB,CAItBC,IAJsB,CAA1B;AAOA,cAAMC,UAAU,GAAG,MAAMd,kBAAkB,CAACE,IAAD,CAA3C;AACA,cAAMa,IAAI,GAAG,MAAMD,UAAU,CAACJ,OAAX,CAAmBM,sBAAnB,CACf,IADe,EAEf,4CAFe,EAGfV,QAAQ,CAAC,CAAD,CAHO,EAIf,4CAJe,EAKjBM,IALiB,CAKZ;AACHC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADX,SALY,CAAnB;AAQAW,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,IAAlC;AACH,OApBD,CAoBE,OAAOI,KAAP,EAAc;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ,KA3ByB;;AAAA,qCA6BhB,YAAY;AAClBf,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAI,CAEH,CAFD,CAEE,OAAOc,KAAP,EAAc,CAEf;AACJ,KApCyB;AAAA;;AAsC1BC,EAAAA,MAAM,GAAG;AACL,WACE,mBACE,MAAC,cAAD,OADF,EAEE,MAAC,SAAD,QACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACI,MAAC,MAAD,mBADJ,CADJ,EAKI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACI,MAAC,MAAD,gBADJ,CALJ,CAFF,CADF;AAcH;;AArDyB;;AAwD9B,eAAenB,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Form, Button } from 'semantic-ui-react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport {getZkSnarkInstance, getERCContractInstance} from '../config/instances/contractInstances';\r\nimport web3 from '../config/web3/web3';\r\n\r\nclass Index extends Component {\r\n\r\n    ontransfer = async () => {\r\n        event.preventDefault();\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            const daiInstance = await getERCContractInstance.methods.approve(\r\n                \"0xAf5956ce09A193E51DF1F1EdFD5dBB4f0ee8D81a\",\r\n                \"10\"\r\n            ).send(\r\n                from\r\n            )\r\n\r\n            const zkInstance = await getZkSnarkInstance(web3);\r\n            const hash = await zkInstance.methods.transferNoteToContract(\r\n                \"10\",\r\n                \"0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f\",\r\n                accounts[0],\r\n                \"0xAf5956ce09A193E51DF1F1EdFD5dBB4f0ee8D81a\"\r\n            ).send({\r\n                from: accounts[0]\r\n            });\r\n            console.log(\"Transaction hash: \", hash);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    onClaim = async () => {\r\n        event.preventDefault();\r\n        try {\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <ToastContainer/>\r\n            <Container>\r\n                <Form onSubmit={this.ontransfer}>\r\n                    <Button>transfer</Button>\r\n                </Form>\r\n                \r\n                <Form onSubmit={this.onClaim}>\r\n                    <Button>claim</Button>\r\n                </Form>\r\n            </Container>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}