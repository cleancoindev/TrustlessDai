{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Container, Form, Button, Grid, Input } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport { getZkSnarkInstance, getERCContractInstance } from '../config/instances/contractInstances';\nimport web3 from '../config/web3/web3';\nimport Layout from '../components/Layout';\nimport { getWitness } from \"../functions/getWitness\";\nimport Axios from 'axios';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"ontransfer\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts, daiInstance, approvehash, zkInstance, hash;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context.sent;\n              _context.next = 7;\n              return getERCContractInstance(web3);\n\n            case 7:\n              daiInstance = _context.sent;\n              _context.next = 10;\n              return daiInstance.methods.approve(\"0xBEe02FD1e5b9e3B34A856Fb1E6493dFC854968dB\", \"10\").send({\n                from: accounts[0]\n              });\n\n            case 10:\n              approvehash = _context.sent;\n              console.log(\"approveHash: \", approvehash);\n              _context.next = 14;\n              return getZkSnarkInstance(web3);\n\n            case 14:\n              zkInstance = _context.sent;\n              _context.next = 17;\n              return zkInstance.methods.transferNoteToContract(\"10\", \"0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f\").send({\n                from: accounts[0]\n              });\n\n            case 17:\n              hash = _context.sent;\n              console.log(\"Transaction hash: \", hash);\n              _context.next = 24;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 21]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClaim\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var accounts, zkInstance, witnessparams, response, hash;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              _context2.prev = 1;\n              _context2.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context2.sent;\n              _context2.next = 7;\n              return getZkSnarkInstance(web3);\n\n            case 7:\n              zkInstance = _context2.sent;\n              witnessparams = getWitness('0xAeF37Da1db647bC187a46AEBEB662CF269636e54', // sender\n              '9', '0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f', // receiver\n              '2');\n              console.log(witnessparams); // const url = \"http://localhost:3001/createproof\";\n              // await Axios.get(\"http://localhost:3001/createproof?witness=168904202930327939080492230969004622904 339630068017193623570711849636010664817 1216631698 326532002671535014699329485375999702230 0 0 80710054703952517336223123171789823554 92441430577956810800440641638774416100 3812576291 9221067889684513358870464131861547279 0 0 168904202930327939080492230969004622904 339630068017193623570711849636010664817 0 0\"\n              // await Axios.get(\"http://localhost:3001/createproof?witness=80710054703952517336223123171789823554 92441430577956810800440641638774416100 3812576291 9221067889684513358870464131861547279 0 0 168904202930327939080492230969004622904 339630068017193623570711849636010664817 1216631698 326532002671535014699329485375999702230 0 0 80710054703952517336223123171789823554 92441430577956810800440641638774416100 0 0\",{    \n\n              _context2.next = 12;\n              return Axios.get(\"http://localhost:3001/createproof?witness=\" + witnessparams, {}).then(function (res) {\n                if (res.statusText == 'OK') {\n                  console.log(\"response:\", res);\n                  response = res;\n                } else {\n                  alert(\"error\");\n                  console.log(res);\n                }\n              })[\"catch\"](function (err) {\n                alert(\"err\");\n                console.log(err);\n              });\n\n            case 12:\n              _context2.next = 14;\n              return zkInstance.methods.claimNote(response.data.proof.a, response.data.proof.b, response.data.proof.c, response.data.inputs, \"20\").send({\n                from: accounts[0]\n              });\n\n            case 14:\n              hash = _context2.sent;\n              _context2.next = 20;\n              break;\n\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 17]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(ToastContainer, null), __jsx(Container, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.ontransfer\n      }, __jsx(Form.Field, null, __jsx(Input, {\n        type: \"input\",\n        labelPosition: \"right\",\n        label: \"Amount out\",\n        value: this.state.amountOut,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            amountOut: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null), __jsx(Form.Field, null, __jsx(Button, null, \"transfer\")))), __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.onClaim\n      }, __jsx(Button, null, \"claim\"))))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["/home/sunny123/Blockchain/ZKP/TrustlessDai/pages/index.js"],"names":["React","Component","Container","Form","Button","Grid","Input","ToastContainer","getZkSnarkInstance","getERCContractInstance","web3","Layout","getWitness","Axios","Index","event","preventDefault","eth","getAccounts","accounts","daiInstance","methods","approve","send","from","approvehash","console","log","zkInstance","transferNoteToContract","hash","witnessparams","get","then","res","statusText","response","alert","err","claimNote","data","proof","a","b","c","inputs","ontransfer","state","amountOut","setState","target","value","onClaim"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Form, Button, Grid, Input } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport {getZkSnarkInstance, getERCContractInstance} from '../config/instances/contractInstances';\nimport web3 from '../config/web3/web3';\nimport Layout from '../components/Layout';\nimport {getWitness} from \"../functions/getWitness\";\nimport Axios from 'axios';\n\nclass Index extends Component {\n\n    ontransfer = async () => {\n        event.preventDefault();\n        try {\n            const accounts = await web3.eth.getAccounts();\n\n            const daiInstance = await getERCContractInstance(web3);\n            const approvehash = await daiInstance.methods.approve(\n                \"0xBEe02FD1e5b9e3B34A856Fb1E6493dFC854968dB\",\n                \"10\"\n            ).send({\n                from: accounts[0]\n            });\n            console.log(\"approveHash: \", approvehash);\n\n            const zkInstance = await getZkSnarkInstance(web3);\n            const hash = await zkInstance.methods.transferNoteToContract(\n                \"10\",\n                \"0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f\",\n            ).send({\n                from: accounts[0]\n            });\n            console.log(\"Transaction hash: \", hash);\n\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    onClaim = async () => {\n        event.preventDefault();\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const zkInstance = await getZkSnarkInstance(web3);\n            const witnessparams = getWitness(\n                '0xAeF37Da1db647bC187a46AEBEB662CF269636e54', // sender\n                '9', \n                '0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f', // receiver\n                '2'\n            );\n            console.log(witnessparams)\n\n            // const url = \"http://localhost:3001/createproof\";\n            // await Axios.get(\"http://localhost:3001/createproof?witness=168904202930327939080492230969004622904 339630068017193623570711849636010664817 1216631698 326532002671535014699329485375999702230 0 0 80710054703952517336223123171789823554 92441430577956810800440641638774416100 3812576291 9221067889684513358870464131861547279 0 0 168904202930327939080492230969004622904 339630068017193623570711849636010664817 0 0\"\n            // await Axios.get(\"http://localhost:3001/createproof?witness=80710054703952517336223123171789823554 92441430577956810800440641638774416100 3812576291 9221067889684513358870464131861547279 0 0 168904202930327939080492230969004622904 339630068017193623570711849636010664817 1216631698 326532002671535014699329485375999702230 0 0 80710054703952517336223123171789823554 92441430577956810800440641638774416100 0 0\",{    \n            let response;    \n            await Axios.get(\"http://localhost:3001/createproof?witness=\"+witnessparams, {})\n                .then((res) => {\n                    if (res.statusText == 'OK') {\n                        console.log(\"response:\", res)\n                        response = res\n                    } else {\n                        alert(\"error\")\n                        console.log(res);\n                    }\n                })\n                .catch((err) => {\n                    alert(\"err\")\n                    console.log(err);\n            });\n\n            // console.log(response.data.proof.a)\n            // console.log(response.data.inputs)\n\n\n            const hash = await zkInstance.methods.claimNote(\n                response.data.proof.a,\n                response.data.proof.b,\n                response.data.proof.c,\n                response.data.inputs,\n                \"20\"\n            ).send({\n                from: accounts[0]\n            });\n            \n            // const hash = await zkInstance.methods.claimNote(\n            //     [\"0x168bab1bbbc15936beb565b51ce8fea998006a0fa9567417aa6261f46dcd16f9\", \"0x01e5c794ab8299705c319366d1bb2bee79b96f05fa08c9aa103f8dcb43a8806b\"],\n            //     [[\"0x1167f9740114fe14ddb0545c4118362589fd7e7ef0bcada02c0212b153755d51\", \"0x1b92451f7a2f8ce896171a8d5842f3455446f2b35e1fb81a1f5040cbcace54ed\"], [\"0x30583965a284f87f733cf0c57016d98446500f31559f810bc6aa6d0c44f2bdd5\", \"0x066b64dde5525d349011707b6f664cc1c1c4b58c3b822016381796675565fdf4\"]],\n            //     [\"0x12d79f5ac4c6cac84c97a113bfa9d2a0c27bbe818e4ca0aad4e9e7015f2ec24a\", \"0x17093bbb859ab53232b408b012e761b1dc87c0cc9d12d09e8d2c99243d1f17c7\"],\n            //     [\"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x000000000000000000000000000000003cb830ed06f3d0e56d7d0ad35010de42\", \"0x00000000000000000000000000000000458b9269b0c07f752e592cd7832522e4\", \"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n            //     \"20\"\n            // ).send({\n            //     from: accounts[0]\n            // });\n            // console.log(\"Transaction hash: \", hash);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    render() {\n        return (\n          <Layout>\n            <ToastContainer/>\n            <Container>\n                <Grid>\n                    <Grid.Row>\n                        <Form onSubmit={this.ontransfer}>\n                            <Form.Field>\n                            <Input\n                                type = \"input\"\n                                labelPosition=\"right\"\n                                label=\"Amount out\"\n                                value={this.state.amountOut}\n                                onChange={event => \n                                    this.setState({\n                                        amountOut: event.target.value,\n                                })}\n                            />\n                            </Form.Field>\n                            <Form.Field>\n                                \n                            </Form.Field>\n                            <Form.Field>\n                                <Button>transfer</Button> \n                            </Form.Field>\n                        </Form>\n                    </Grid.Row>\n                \n                    <Grid.Row>\n                        <Form onSubmit={this.onClaim}>\n                            <Button>claim</Button>\n                        </Form>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n          </Layout>\n        );\n    }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}