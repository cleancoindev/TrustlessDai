{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Container, Form, Button, Grid, Input } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport { getZkSnarkInstance, getERCContractInstance } from '../config/instances/contractInstances';\nimport web3 from '../config/web3/web3';\nimport Layout from '../components/Layout';\nimport { getWitness } from \"../functions/getWitness\";\nimport Axios from 'axios';\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"ontransfer\", async () => {\n      event.preventDefault();\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const daiInstance = await getERCContractInstance(web3);\n        const approvehash = await daiInstance.methods.approve(\"0xBEe02FD1e5b9e3B34A856Fb1E6493dFC854968dB\", \"10\").send({\n          from: accounts[0]\n        });\n        console.log(\"approveHash: \", approvehash);\n        const zkInstance = await getZkSnarkInstance(web3);\n        const hash = await zkInstance.methods.transferNoteToContract(\"10\", \"0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f\").send({\n          from: accounts[0]\n        });\n        console.log(\"Transaction hash: \", hash);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"onClaim\", async () => {\n      event.preventDefault();\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const zkInstance = await getZkSnarkInstance(web3);\n        const witnessparams = getWitness('0xAeF37Da1db647bC187a46AEBEB662CF269636e54', // sender\n        '9', '0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f', // receiver\n        '2');\n        console.log(witnessparams); // const url = \"http://localhost:3001/createproof\";\n        // await Axios.get(\"http://localhost:3001/createproof?witness=168904202930327939080492230969004622904 339630068017193623570711849636010664817 1216631698 326532002671535014699329485375999702230 0 0 80710054703952517336223123171789823554 92441430577956810800440641638774416100 3812576291 9221067889684513358870464131861547279 0 0 168904202930327939080492230969004622904 339630068017193623570711849636010664817 0 0\"\n        // await Axios.get(\"http://localhost:3001/createproof?witness=80710054703952517336223123171789823554 92441430577956810800440641638774416100 3812576291 9221067889684513358870464131861547279 0 0 168904202930327939080492230969004622904 339630068017193623570711849636010664817 1216631698 326532002671535014699329485375999702230 0 0 80710054703952517336223123171789823554 92441430577956810800440641638774416100 0 0\",{    \n\n        let response;\n        await Axios.get(\"http://localhost:3001/createproof?witness=\" + witnessparams, {}).then(res => {\n          if (res.statusText == 'OK') {\n            console.log(\"response:\", res);\n            response = res;\n          } else {\n            alert(\"error\");\n            console.log(res);\n          }\n        }).catch(err => {\n          alert(\"err\");\n          console.log(err);\n        }); // console.log(response.data.proof.a)\n        // console.log(response.data.inputs)\n\n        const hash = await zkInstance.methods.claimNote(response.data.proof.a, response.data.proof.b, response.data.proof.c, response.data.inputs, \"20\").send({\n          from: accounts[0]\n        }); // const hash = await zkInstance.methods.claimNote(\n        //     [\"0x168bab1bbbc15936beb565b51ce8fea998006a0fa9567417aa6261f46dcd16f9\", \"0x01e5c794ab8299705c319366d1bb2bee79b96f05fa08c9aa103f8dcb43a8806b\"],\n        //     [[\"0x1167f9740114fe14ddb0545c4118362589fd7e7ef0bcada02c0212b153755d51\", \"0x1b92451f7a2f8ce896171a8d5842f3455446f2b35e1fb81a1f5040cbcace54ed\"], [\"0x30583965a284f87f733cf0c57016d98446500f31559f810bc6aa6d0c44f2bdd5\", \"0x066b64dde5525d349011707b6f664cc1c1c4b58c3b822016381796675565fdf4\"]],\n        //     [\"0x12d79f5ac4c6cac84c97a113bfa9d2a0c27bbe818e4ca0aad4e9e7015f2ec24a\", \"0x17093bbb859ab53232b408b012e761b1dc87c0cc9d12d09e8d2c99243d1f17c7\"],\n        //     [\"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x000000000000000000000000000000003cb830ed06f3d0e56d7d0ad35010de42\", \"0x00000000000000000000000000000000458b9269b0c07f752e592cd7832522e4\", \"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n        //     \"20\"\n        // ).send({\n        //     from: accounts[0]\n        // });\n        // console.log(\"Transaction hash: \", hash);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(ToastContainer, null), __jsx(Container, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Form, {\n      onSubmit: this.ontransfer\n    }, __jsx(Form.Field, null, __jsx(Input, {\n      type: \"input\",\n      labelPosition: \"right\",\n      label: \"Recipient Address\",\n      value: this.state.amountOut,\n      onChange: event => this.setState({\n        amountOut: event.target.value\n      })\n    })), __jsx(Form.Field, null), __jsx(Form.Field, null, __jsx(Button, null, \"transfer\")))), __jsx(Grid.Row, null, __jsx(Form, {\n      onSubmit: this.onClaim\n    }, __jsx(Button, null, \"claim\"))))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/home/sunny123/Blockchain/ZKP/TrustlessDai/pages/index.js"],"names":["React","Component","Container","Form","Button","Grid","Input","ToastContainer","getZkSnarkInstance","getERCContractInstance","web3","Layout","getWitness","Axios","Index","event","preventDefault","accounts","eth","getAccounts","daiInstance","approvehash","methods","approve","send","from","console","log","zkInstance","hash","transferNoteToContract","error","witnessparams","response","get","then","res","statusText","alert","catch","err","claimNote","data","proof","a","b","c","inputs","render","ontransfer","state","amountOut","setState","target","value","onClaim"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Form, Button, Grid, Input } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport {getZkSnarkInstance, getERCContractInstance} from '../config/instances/contractInstances';\nimport web3 from '../config/web3/web3';\nimport Layout from '../components/Layout';\nimport {getWitness} from \"../functions/getWitness\";\nimport Axios from 'axios';\n\nclass Index extends Component {\n\n    ontransfer = async () => {\n        event.preventDefault();\n        try {\n            const accounts = await web3.eth.getAccounts();\n\n            const daiInstance = await getERCContractInstance(web3);\n            const approvehash = await daiInstance.methods.approve(\n                \"0xBEe02FD1e5b9e3B34A856Fb1E6493dFC854968dB\",\n                \"10\"\n            ).send({\n                from: accounts[0]\n            });\n            console.log(\"approveHash: \", approvehash);\n\n            const zkInstance = await getZkSnarkInstance(web3);\n            const hash = await zkInstance.methods.transferNoteToContract(\n                \"10\",\n                \"0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f\",\n            ).send({\n                from: accounts[0]\n            });\n            console.log(\"Transaction hash: \", hash);\n\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    onClaim = async () => {\n        event.preventDefault();\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const zkInstance = await getZkSnarkInstance(web3);\n            const witnessparams = getWitness(\n                '0xAeF37Da1db647bC187a46AEBEB662CF269636e54', // sender\n                '9', \n                '0xE33f4C2306eFE9BF66a64A3c42408d2Fe1Cb890f', // receiver\n                '2'\n            );\n            console.log(witnessparams)\n\n            // const url = \"http://localhost:3001/createproof\";\n            // await Axios.get(\"http://localhost:3001/createproof?witness=168904202930327939080492230969004622904 339630068017193623570711849636010664817 1216631698 326532002671535014699329485375999702230 0 0 80710054703952517336223123171789823554 92441430577956810800440641638774416100 3812576291 9221067889684513358870464131861547279 0 0 168904202930327939080492230969004622904 339630068017193623570711849636010664817 0 0\"\n            // await Axios.get(\"http://localhost:3001/createproof?witness=80710054703952517336223123171789823554 92441430577956810800440641638774416100 3812576291 9221067889684513358870464131861547279 0 0 168904202930327939080492230969004622904 339630068017193623570711849636010664817 1216631698 326532002671535014699329485375999702230 0 0 80710054703952517336223123171789823554 92441430577956810800440641638774416100 0 0\",{    \n            let response;    \n            await Axios.get(\"http://localhost:3001/createproof?witness=\"+witnessparams, {})\n                .then((res) => {\n                    if (res.statusText == 'OK') {\n                        console.log(\"response:\", res)\n                        response = res\n                    } else {\n                        alert(\"error\")\n                        console.log(res);\n                    }\n                })\n                .catch((err) => {\n                    alert(\"err\")\n                    console.log(err);\n            });\n\n            // console.log(response.data.proof.a)\n            // console.log(response.data.inputs)\n\n\n            const hash = await zkInstance.methods.claimNote(\n                response.data.proof.a,\n                response.data.proof.b,\n                response.data.proof.c,\n                response.data.inputs,\n                \"20\"\n            ).send({\n                from: accounts[0]\n            });\n            \n            // const hash = await zkInstance.methods.claimNote(\n            //     [\"0x168bab1bbbc15936beb565b51ce8fea998006a0fa9567417aa6261f46dcd16f9\", \"0x01e5c794ab8299705c319366d1bb2bee79b96f05fa08c9aa103f8dcb43a8806b\"],\n            //     [[\"0x1167f9740114fe14ddb0545c4118362589fd7e7ef0bcada02c0212b153755d51\", \"0x1b92451f7a2f8ce896171a8d5842f3455446f2b35e1fb81a1f5040cbcace54ed\"], [\"0x30583965a284f87f733cf0c57016d98446500f31559f810bc6aa6d0c44f2bdd5\", \"0x066b64dde5525d349011707b6f664cc1c1c4b58c3b822016381796675565fdf4\"]],\n            //     [\"0x12d79f5ac4c6cac84c97a113bfa9d2a0c27bbe818e4ca0aad4e9e7015f2ec24a\", \"0x17093bbb859ab53232b408b012e761b1dc87c0cc9d12d09e8d2c99243d1f17c7\"],\n            //     [\"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x000000000000000000000000000000003cb830ed06f3d0e56d7d0ad35010de42\", \"0x00000000000000000000000000000000458b9269b0c07f752e592cd7832522e4\", \"0x000000000000000000000000000000007f11c426b5418e7f6d1577d332178438\", \"0x00000000000000000000000000000000ff825f2e5750acc639cf923b34f02371\", \"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n            //     \"20\"\n            // ).send({\n            //     from: accounts[0]\n            // });\n            // console.log(\"Transaction hash: \", hash);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    render() {\n        return (\n          <Layout>\n            <ToastContainer/>\n            <Container>\n                <Grid>\n                    <Grid.Row>\n                        <Form onSubmit={this.ontransfer}>\n                            <Form.Field>\n                                <Input\n                                    type = \"input\"\n                                    labelPosition=\"right\"\n                                    label=\"Recipient Address\"\n                                    value={this.state.amountOut}\n                                    onChange={event => \n                                        this.setState({\n                                            amountOut: event.target.value,\n                                    })}\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                \n                            </Form.Field>\n                            <Form.Field>\n                                <Button>transfer</Button> \n                            </Form.Field>\n                        </Form>\n                    </Grid.Row>\n                \n                    <Grid.Row>\n                        <Form onSubmit={this.onClaim}>\n                            <Button>claim</Button>\n                        </Form>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n          </Layout>\n        );\n    }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}